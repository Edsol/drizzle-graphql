name: Release (latest)

on: workflow_dispatch

jobs:
    release:
        permissions: write-all
        strategy:
            fail-fast: false
            matrix:
                package:
                    - drizzle-graphql
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: 18
                  registry-url: 'https://registry.npmjs.org'

            - uses: pnpm/action-setup@v3
              name: Install pnpm
              id: pnpm-install
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

            - uses: actions/cache@v4
              name: Setup pnpm cache
              with:
                  path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Check preconditions
              id: checks
              shell: bash
              run: |
                  latest="$(npm view --json ${{ matrix.package }} dist-tags.latest | jq -r)"
                  version="$(jq -r .version package.json)"
                  is_version_published="$(npm view ${{ matrix.package }} versions --json | jq -r '.[] | select(. == "'$version'") | . == "'$version'"')"

                  if [[ "$is_version_published" == "true" ]]; then
                    echo "\`${{ matrix.package }}@$version\` already published, adding tag \`latest\`" >> $GITHUB_STEP_SUMMARY
                    npm dist-tag add ${{ matrix.package }}@$version latest
                  elif [[ "$latest" != "$version" ]]; then
                    echo "Latest:  $latest"
                    echo "Current: $version"

                    changelogPath=$(node -e "console.log(require('path').resolve('..', 'changelogs', '${{ matrix.package }}', '$version.md'))")
                    if [[ ! -f "$changelogPath" ]]; then
                      echo "::error::Changelog for version $version not found: $changelogPath"
                      exit 1
                    fi

                    {
                      echo "version=$version"
                      echo "has_new_release=true"
                      echo "changelog_path=$changelogPath"
                    } >> $GITHUB_OUTPUT
                  else
                    echo "Already up to date: $version"
                    echo "\`$version\` is already latest on NPM" >> $GITHUB_STEP_SUMMARY
                  fi

            - name: Build
              if: steps.checks.outputs.has_new_release == 'true'
              run: |
                  pnpm build

            - name: Pack
              if: steps.checks.outputs.has_new_release == 'true'
              shell: bash
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
              run: |
                  npm run pack

            - name: Run @arethetypeswrong/cli
              if: steps.checks.outputs.has_new_release == 'true'
              shell: bash
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
              run: |
                  pnpm attw package.tgz

            - name: Publish
              if: steps.checks.outputs.has_new_release == 'true'
              shell: bash
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
              run: |
                  version="${{ steps.checks.outputs.version }}"

                  echo "Publishing ${{ matrix.package }}@$version"
                  npm run publish

                  echo "npm: \`+ ${{ matrix.package }}@$version\`" >> $GITHUB_STEP_SUMMARY

                  # Post release message to Discord
                  # curl -X POST -H "Content-Type: application/json" -d "{\"embeds\": [{\"title\": \"New \`${{ matrix.package }}\` release! ðŸŽ‰\", \"url\": \"https://www.npmjs.com/package/${{ matrix.package }}\", \"color\": \"12907856\", \"fields\": [{\"name\": \"Tag\", \"value\": \"\`$tag\`\"}]}]}"
